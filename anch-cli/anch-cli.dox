/*! \page page_cli AnCH CLI library documentation
 *
 * \tableofcontents
 *
 * \section cli_intro_seq Introduction
 *
 * AnCH CLI library aims to provide facilities for parsing CLI arguments (and more in future ...)
 *
 * \section cli_prereq_sec Prerequisites
 *
 * AnCH CLI is a standalone library as long as you only parse CLI arguments
 *
 * \section cli_install_sec Installation
 *
 * make install
 *
 * \section cli_concept_sec Conception
 *
 * AnCH CLI library main class is: \ref anch::cli::ArgHandler "ArgHandler".\n
 * AnCH CLI library contains common bindings in \c cli/utils.hpp .
 *
 * \section cli_example_sec Examples
 *
 * Generate and parse CLIs:
 * \code{.cpp}
  App application = {
    .name = "toto",
    .version = "0.1 alpha 42",
    .author = "Vincent Lachenal",
    .copyright = "No copyrigth - it is a fuking unit test",
    .licence = "WTFPL 2.0",
    .banner = "Ceci est une banni√®re",
    .bannerPath = "/etc/fstab"
  };
  // Application options are declared ...
  Options opts;
  {
    ArgHandler handler(application, {
        {.handler = anch::cli::bindTrue(opts.verbose), .sopt = 'v', .lopt = "verbose", .description = "Verbose mode"},
        {.handler = anch::cli::bindStr(opts.str), .sopt = 'p', .lopt = "plop", .value = true, .name = "trestreslong", .description = "plop arg", .example = "PLOP!!!"},
        {.handler = anch::cli::bindStr(opts.str2), .lopt = "plip", .value = true, .description = "plip arg"},
        {.handler = anch::cli::bindStr(opts.pos), .value = true, .name = "POS1", .description = "pos"},
        {.handler = anch::cli::bindStr(opts.pos2), .value = true, .name = "POS2", .description = "pos2"},
        {.handler = anch::cli::bindCol(opts.multPos), .value = true, .name = "POSM", .multi = true, .description = "pos-mult"}
      });
    handler.printBanner(std::cerr);
    handler.handle(argc, argv);
  }\endcode
 */
